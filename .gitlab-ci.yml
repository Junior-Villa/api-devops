stages:
  - merge-master>homolog 
  - merge-homolog>homolog-qa
  - merge-homolog>dev

Merge-Master > Homolog:
  image: bitnami/git:2.42.1 
  stage: merge-master>homolog
  tags:
    - merge

  script: 
    - export CI_JOB_TOKEN="VxHD9hiXy2FzMMoetzzp"
    - git config --global user.email "desenvolvimento@sifat.com.br"
    - git config --global user.name "MERGE-AUTOMATIZADO"
    - git status
    - git add .
    - git fetch
    - git checkout homolog && git pull --allow-unrelated-histories # Checkout na branch que irá receber o merge
    - echo $CI_COMMIT_REF_NAME
    - git merge origin/$CI_COMMIT_REF_NAME --allow-unrelated-histories # Nao remover ORIGIN
    - git push --force "http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.sifat.com.br:8888/waybe-api-microsservicos/api-devops.git"

  only:
    - master 

Merge-Homolog > Dev:
  image: bitnami/git:2.42.1
  stage: merge-homolog>dev
  tags:
    - merge

  script: 
    - export CI_JOB_TOKEN="VxHD9hiXy2FzMMoetzzp"
    - git config --global user.email "desenvolvimento@sifat.com.br"
    - git config --global user.name "MERGE-AUTOMATIZADO"
    - git status
    - git add .
    - git fetch
    - git checkout dev && git pull --allow-unrelated-histories # Checkout na branch que irá receber o merge
    - echo $CI_COMMIT_REF_NAME
    - git merge origin/$CI_COMMIT_REF_NAME --allow-unrelated-histories # Nao remover ORIGIN
    - git push --force "http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.sifat.com.br:8888/waybe-api-microsservicos/api-devops.git"

  only:
    - homolog   
    
Merge-Homolog > Homolog-qa:
  image: bitnami/git:2.42.1
  stage: merge-homolog>homolog-qa
  tags:
    - merge

  script: 
    - export CI_JOB_TOKEN="VxHD9hiXy2FzMMoetzzp"
    - git config --global user.email "desenvolvimento@sifat.com.br"
    - git config --global user.name "MERGE-AUTOMATIZADO"
    - git status
    - git add .
    - git fetch
    - git checkout homolog-qa && git pull --allow-unrelated-histories # Checkout na branch que irá receber o merge
    - echo $CI_COMMIT_REF_NAME
    - git merge origin/$CI_COMMIT_REF_NAME --allow-unrelated-histories # Nao remover ORIGIN
    - git push --force "http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.sifat.com.br:8888/waybe-api-microsservicos/api-devops.git"

  only:
    - homolog

  after_script:
    - >
      if [ "$CI_COMMIT_BRANCH" == "mmaster" ]; then
        def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
        def commitAuthor = sh(script: 'git log -1 --pretty=format:%an', returnStdout: true).trim()
        def resultMessage = "Build do projeto ${env.JOB_NAME} realizado com Sucesso"
        def resultWebhookUrl = 'https://discord.com/api/webhooks/1166440288735203378/5QhnoWmk-Lg-BwK77IIzU_eO2lpKIGi9k52XUt-yyuGMUB2jMuV4wY4X-HAcSu8kVs4E'

        if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
          resultMessage = "Build do projeto ${env.JOB_NAME} Servidor GITLAB, realizado por ${commitAuthor} foi feito com Sucesso na BRANCH **${BRANCH}**"
        } else {
          resultMessage = "Falha no projeto <font color='red'>${env.JOB_NAME}</font>"
        }
        discordSend(
          result: currentBuild.currentResult,
          description: resultMessage,
          webhookURL: resultWebhookUrl,
        )
      fi