spring:
  application:
    name: api-devops
  kafka:
    bootstrap-servers: ${WAYBE_KAFKA_HOST}:${WAYBE_KAFKA_PORTA}    
  jackson:
    serialization:
      indent_output: true
  datasource:
    url: jdbc:mysql://${WAYBE_BANCO_HOST}:${WAYBE_BANCO_PORTA}/${WAYBE_BANCO_NOME}
    username: ${WAYBE_BANCO_USUARIO}
    password: ${WAYBE_BANCO_SENHA}
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.MySQL8Dialect
      jdbc:
        lob.non-contextual-creation: true
  output:
    ansi:
      enabled: Always
  servlet:
    multipart:
      max-file-size: 110MB
      max-request-size: 110MB
sifat:
  api:
    url:
      api-usuario-sessao: 'http://api-usuario-sessao/usuario-sessao'
  serviceRegistry:
    username: renan
    password: renan123
  configServer:
    username: renan
    password: renan321
  auth:
    jwtSecret: 32508b03a5320e6ec87c3c353a7f18f3c57c6f54a4a266de499a15e27a6e7a4a6194156f91685d84765711dc2ce7d8928ff912a90cc8b938d78285a6bdca1d00

eureka:
  client:
    serviceUrl:
      defaultZone: 'http://${sifat.serviceRegistry.username}:${sifat.serviceRegistry.password}@${WAYBE_EUREKA_IP_HOMOLOG_QA}:${WAYBE_EUREKA_PORTA}/eureka'

server:
  port: 8100
  servlet:
    context-path: '/devops/'


management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      group:
        custom:
          include: diskSpace, ping
          show-components: always
          show-details: always
